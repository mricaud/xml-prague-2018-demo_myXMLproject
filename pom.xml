<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.els.projets</groupId>
  <artifactId>myProject</artifactId>
  <version>1.0-newScheme</version>
  
  <!--<dependencies>
    <dependency>
      <groupId>eu.els.lib</groupId>
      <artifactId>myXslLib</artifactId>
      <version>1.0</version>
    </dependency>
  </dependencies>-->
  
  <!--cals2html has a dependency to myXslLib, let's try 2 levels dependency here-->
  <dependencies>
    <dependency>
      <groupId>eu.els.lib</groupId>
      <artifactId>cals2html</artifactId>
      <version>1.2-newScheme</version>
    </dependency>
  </dependencies>
  
  <build>
    
    <resources>
      <resource>
        <directory>src/main/xsl</directory>
      </resource>
    </resources>
    
    <plugins>
      <!--A plugin to generate a catalog.xml file at the root of the project.
        This catalog will be used to resolve artefactId:/ uris, based on dependencies declaration-->
      <plugin>
        <groupId>top.marchand.xml.maven</groupId>
        <artifactId>catalogBuilder-maven-plugin</artifactId>
        <version>2.0.0-RC1</version>
        <executions>
          <execution>
            <id>preparation</id>
            <goals>
              <goal>catalog</goal>
            </goals>
          </execution>
          <execution>
            <id>packaging</id>
            <phase>package</phase>
            <goals>
              <goal>catalog</goal>
            </goals>
            <!--Alternativ catalog file generation-->
            <configuration>
              <rewriteToProtocol>cp</rewriteToProtocol>
              <catalogFileName>target/classes/catalog.xml</catalogFileName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!--A plugin to generate a fat jar including all dependencies-->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!--A plugin to lauch xspec tests at build time-->
      <!--Default directory where *.xspec files are searched : src/test-->
      <plugin>
        <groupId>io.xspec.maven</groupId>
        <artifactId>xspec-maven-plugin</artifactId>
        <version>1.5.1</version>
        <dependencies>
          <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.8.0-8</version>
          </dependency>
        </dependencies>
        <configuration>
          <catalogFile>catalog.xml</catalogFile>
          <generateSurefireReport>true</generateSurefireReport>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>run-xspec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!--A plugin to generate source with XSLT-->
      <!--see http://www.mojohaus.org/xml-maven-plugin/transformation.html-->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformationSets>
            <transformationSet>
              <dir>src/main/xsd</dir>
              <includes>
                <include>mySchema.xsd</include>
              </includes>
              <stylesheet>src/build/generate-simple-schema.xsl</stylesheet>
              <outputDir>target/classes</outputDir>
              <fileMappers>
                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                  <pattern>^(.*?)\.xsd$</pattern>
                  <replacement>$1.simple.xsd</replacement>
                </fileMapper>
              </fileMappers>
            </transformationSet>
          </transformationSets>
          <catalogs>
            <catalog>catalog.xml</catalog>
          </catalogs>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>9.8.0-8</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
      </plugin>
      <!--A report plugin to generate xsl documentation, like java doc-->
      <!--After building with command "mvn site", documentation is available in target/site--> 
      <plugin>
        <groupId>top.marchand.xml</groupId>
        <artifactId>xslDoc-maven-plugin</artifactId>
        <version>0.11</version>
        <configuration>
          <xslDirEntries>
            <xslDirEntry>
              <xslDirectory>src/main/xsl</xslDirectory>
            </xslDirEntry>
          </xslDirEntries>
          <catalog>catalog.xml</catalog>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  
</project>
